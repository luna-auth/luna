---
import { actions, isInputError } from 'astro:actions';
import Layout from '../layouts/Layout.astro';

/** If user is already logged in, redirect away */
if (Astro.locals.user) {
  return Astro.redirect('/');
}

let data = null;
let error = null;
let inputErrors: Record<string, string[]> = {};

/** If this is a POST request, handle registration */
if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const result = await Astro.callAction(actions.auth.register, formData);
  data = result.data;
  error = result.error;

  // If successful, redirect to homepage
  if (data?.success) {
    return Astro.redirect('/');
  }

  // Get field-specific errors if any
  if (isInputError(error)) {
    inputErrors = error.fields;
  }
}

/** Show relevant error messages */
let errorMessage = '';
if (error) {
  if (error.code === 'CONFLICT') {
    errorMessage = 'This email is already registered.';
  } else if (isInputError(error)) {
    errorMessage = 'Please check your input and try again.';
  } else {
    errorMessage = error.message || 'Registration failed. Please try again.';
  }
}
---

<Layout title="Register">
  <form method="POST" data-astro-reload>
    {errorMessage && (
      <p style="background: #fdd; padding: 0.5rem; color: red;">
        <strong>Error:</strong> {errorMessage}
      </p>
    )}

    <label for="email">Email</label>
    <input
      required
      type="email"
      name="email"
      id="email"
      placeholder="user@example.com"
    />
    {inputErrors.email && (
      <span style="color: red;">{inputErrors.email.join(', ')}</span>
    )}

    <label for="password">Password</label>
    <input
      required
      type="password"
      name="password"
      id="password"
      placeholder="••••••••"
    />
    {inputErrors.password && (
      <span style="color: red;">{inputErrors.password.join(', ')}</span>
    )}

    <button type="submit">Register</button>
  </form>
</Layout>